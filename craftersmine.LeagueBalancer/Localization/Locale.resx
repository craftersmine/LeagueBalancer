<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CrashHandlerWindow.Buttons.CopyToClipboard" xml:space="preserve">
    <value>Copy Info to Clipboard</value>
  </data>
  <data name="CrashHandlerWindow.Buttons.OpenIssues" xml:space="preserve">
    <value>Open GitHub Issues</value>
  </data>
  <data name="CrashHandlerWindow.Buuttons.CloseApp" xml:space="preserve">
    <value>Close application</value>
  </data>
  <data name="CrashHandlerWindow.Description" xml:space="preserve">
    <value>In order to debug and fix the problem, please open an issue at project GitHub page. Please include following information in text format.</value>
  </data>
  <data name="CrashHandlerWindow.Label.ExceptionMessage" xml:space="preserve">
    <value>Exception message:</value>
  </data>
  <data name="CrashHandlerWindow.Label.ExceptionStacktrace" xml:space="preserve">
    <value>Exception stacktrace:</value>
  </data>
  <data name="CrashHandlerWindow.Label.ExceptionType" xml:space="preserve">
    <value>Exception type:</value>
  </data>
  <data name="CrashHandlerWindow.Title" xml:space="preserve">
	  <value>Unfortunately, the application has crashed!</value>
  </data>
  <data name="MainWindow.Buttons.AddSummoner.ToolTip" xml:space="preserve">
    <value>Add Player</value>
  </data>
  <data name="MainWindow.Buttons.Balance" xml:space="preserve">
    <value>BALANCE</value>
  </data>
  <data name="MainWindow.Buttons.Balance.ToolTip" xml:space="preserve">
    <value>Balance teams by LP</value>
  </data>
  <data name="MainWindow.Buttons.ClearSummonersList.ToolTip" xml:space="preserve">
    <value>Clear Players list</value>
  </data>
  <data name="MainWindow.Buttons.CopySummonersListToClipboard.ToolTip" xml:space="preserve">
    <value>Copy all players characters into clipboard</value>
  </data>
  <data name="MainWindow.Buttons.GetRandomCharacters" xml:space="preserve">
    <value>Get Randomized Champions For All</value>
  </data>
  <data name="MainWindow.Buttons.GetRandomCharacters.ToolTip" xml:space="preserve">
    <value>Roll champions for every player</value>
  </data>
  <data name="MainWindow.Buttons.ImportFromClipboard.ToolTip" xml:space="preserve">
    <value>Import players from lobby chat</value>
  </data>
  <data name="MainWindow.Buttons.OpenHideChampionsList" xml:space="preserve">
    <value>Open/Hide Champions List in text form</value>
  </data>
  <data name="MainWindow.Buttons.OpenHideChampionsList.ToolTip" xml:space="preserve">
    <value>Opens or hides champions list in text form that you can copy</value>
  </data>
  <data name="MainWindow.Buttons.RemoveSummoner.ToolTip" xml:space="preserve">
    <value>Remove Player</value>
  </data>
  <data name="MainWindow.Buttons.RerollSummonerCharacters" xml:space="preserve">
    <value>Reroll Summoner Champions</value>
  </data>
  <data name="MainWindow.Buttons.RerollSummonerCharacters.ToolTip" xml:space="preserve">
    <value>Reroll champions for selected player</value>
  </data>
  <data name="MainWindow.ComboBox.Region.ToolTip" xml:space="preserve">
    <value>Select a player region</value>
  </data>
  <data name="MainWindow.Copyright" xml:space="preserve">
	  <value>Made by craftersmine with ❤️ - App version</value>
  </data>
  <data name="MainWindow.Disclaimer" xml:space="preserve">
    <value>This application was created under Riot Games' "Legal Jibber Jabber" policy using assets owned by Riot Games. Riot Games does not endorse or sponsor this project.</value>
  </data>
  <data name="MainWindow.Label.AvailableCharacterPool" xml:space="preserve">
    <value>Available Pool:</value>
  </data>
  <data name="MainWindow.Label.BlueTeam" xml:space="preserve">
    <value>Blue Team</value>
  </data>
  <data name="MainWindow.Label.ChampionsListTip" xml:space="preserve">
    <value>Select player in players list to generate champions</value>
  </data>
  <data name="MainWindow.Label.RedTeam" xml:space="preserve">
    <value>Red Team</value>
  </data>
  <data name="MainWindow.Links.BugReport" xml:space="preserve">
    <value>🔗 Report a Bug</value>
  </data>
  <data name="MainWindow.Links.GitHub" xml:space="preserve">
    <value>🔗 GitHub Page</value>
  </data>
  <data name="MainWindow.Links.RequestFeature" xml:space="preserve">
    <value>🔗 Request a feature</value>
  </data>
  <data name="MainWindow.Links.UpdateAvailable" xml:space="preserve">
    <value>🔄️ Update Available!</value>
  </data>
  <data name="MainWindow.List.Champions.Mastery" xml:space="preserve">
    <value>Mastery points: </value>
  </data>
  <data name="MainWindow.List.Summoners.Label.Level" xml:space="preserve">
    <value>Lvl: </value>
  </data>
  <data name="MainWindow.List.Summoners.Label.Rank" xml:space="preserve">
    <value>Rank:</value>
  </data>
  <data name="MainWindow.Message.BrokenApiKey.Content" xml:space="preserve">
    <value>Unable to access Riot Games API due to issue with Application API key! Contact app developer about this error!</value>
  </data>
  <data name="MainWindow.Message.BrokenApiKey.Title" xml:space="preserve">
    <value>Expired or broken API key!</value>
  </data>
  <data name="MainWindow.Message.InvalidRiotId.Content" xml:space="preserve">
    <value>RiotID Tagline isn't specified! Specify correct RiotID in this format: username#tag</value>
  </data>
  <data name="MainWindow.Message.InvalidRiotId.Title" xml:space="preserve">
    <value>Invalid RiotID</value>
  </data>
  <data name="MainWindow.Message.RateLimited.Content" xml:space="preserve">
    <value>Unable to access Riot Games API due to being rate-limited! Try again after {0}</value>
  </data>
  <data name="MainWindow.Message.RateLimited.Title" xml:space="preserve">
    <value>Rate-limited!</value>
  </data>
  <data name="MainWindow.Message.UnableToFindPlayer.Content" xml:space="preserve">
    <value>Unable to player find "{0}#{1}" on {2} server! Check if RiotID is correct and selected right server.</value>
  </data>
  <data name="MainWindow.Message.UnableToFindPlayer.Title" xml:space="preserve">
    <value>Unable to find player!</value>
  </data>
  <data name="MainWindow.Message.UnknownError.Content" xml:space="preserve">
    <value>Unable to access Riot Games API due to unknown error! {0}</value>
  </data>
  <data name="MainWindow.Message.UnknownError.Title" xml:space="preserve">
    <value>Failed!</value>
  </data>
  <data name="MainWindow.Slider.AvailableCharacterPoolSize.ToolTip" xml:space="preserve">
    <value>Amount of characters to generate</value>
  </data>
  <data name="MainWindow.String.RolledChampions" xml:space="preserve">
    <value>Rolled champions:
{0}</value>
  </data>
  <data name="MainWindow.TextBox.RiotId.ToolTip" xml:space="preserve">
    <value>Riot ID (e.g. craftersmine#Ornn)</value>
  </data>
  <data name="MainWindow.Title" xml:space="preserve">
    <value>League of Legends Custom Game Team Balancer</value>
  </data>
  <data name="RankedTier.Bronze" xml:space="preserve">
    <value>Bronze</value>
  </data>
  <data name="RankedTier.Challenger" xml:space="preserve">
    <value>Challenger</value>
  </data>
  <data name="RankedTier.Diamond" xml:space="preserve">
    <value>Diamond</value>
  </data>
  <data name="RankedTier.Emerald" xml:space="preserve">
    <value>Emerald</value>
  </data>
  <data name="RankedTier.Gold" xml:space="preserve">
    <value>Gold</value>
  </data>
  <data name="RankedTier.Grandmaster" xml:space="preserve">
    <value>Grandmaster</value>
  </data>
  <data name="RankedTier.Iron" xml:space="preserve">
    <value>Iron</value>
  </data>
  <data name="RankedTier.Master" xml:space="preserve">
    <value>Master</value>
  </data>
  <data name="RankedTier.Platinum" xml:space="preserve">
    <value>Platinum</value>
  </data>
  <data name="RankedTier.Silver" xml:space="preserve">
    <value>Silver</value>
  </data>
  <data name="RankedTier.Unranked" xml:space="preserve">
    <value>Unranked</value>
  </data>
  <data name="Region.Brazil" xml:space="preserve">
    <value>Brazil</value>
  </data>
  <data name="Region.EuropeNordicEast" xml:space="preserve">
    <value>Europe Nordic East</value>
  </data>
  <data name="Region.EuropeWest" xml:space="preserve">
    <value>Europe West</value>
  </data>
  <data name="Region.Japan" xml:space="preserve">
    <value>Japan</value>
  </data>
  <data name="Region.Korea" xml:space="preserve">
    <value>Korea</value>
  </data>
  <data name="Region.LatinAmericaNorth" xml:space="preserve">
    <value>Latin America North</value>
  </data>
  <data name="Region.LatinAmericaSouth" xml:space="preserve">
    <value>Latin America South</value>
  </data>
  <data name="Region.NorthAmerica" xml:space="preserve">
    <value>North America</value>
  </data>
  <data name="Region.Oceania" xml:space="preserve">
    <value>Oceania</value>
  </data>
  <data name="Region.Philippines" xml:space="preserve">
    <value>Philippines</value>
  </data>
  <data name="Region.Russia" xml:space="preserve">
    <value>Russia and CIS</value>
  </data>
  <data name="Region.Singapore" xml:space="preserve">
    <value>Singapore</value>
  </data>
  <data name="Region.Taiwan" xml:space="preserve">
    <value>Taiwan</value>
  </data>
  <data name="Region.Thailand" xml:space="preserve">
    <value>Thailand</value>
  </data>
  <data name="Region.Turkey" xml:space="preserve">
    <value>Turkey</value>
  </data>
  <data name="Region.Vietnam" xml:space="preserve">
    <value>Vietnam</value>
  </data>
  <data name="SettingsWindow.Buttons.Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="SettingsWindow.Label.Language" xml:space="preserve">
    <value>Application Language:</value>
  </data>
  <data name="SettingsWindow.Title" xml:space="preserve">
    <value>Settings</value>
  </data>
</root>